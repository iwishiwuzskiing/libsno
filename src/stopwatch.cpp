#include <stopwatch_impl.h>
#include <sno/stopwatch.h>

////////////////////////////////////////////////////////////////////////////////

so::Stopwatch::Stopwatch()
  :
    m_pimpl(new Stopwatch_impl())
{

}

////////////////////////////////////////////////////////////////////////////////

so::Stopwatch::~Stopwatch() = default;

////////////////////////////////////////////////////////////////////////////////

so::Stopwatch::Stopwatch(const Stopwatch& other)
    :
      m_pimpl(new Stopwatch_impl(*other.m_pimpl))
{

}

////////////////////////////////////////////////////////////////////////////////

so::Stopwatch& so::Stopwatch::operator=(Stopwatch other)
{
    *m_pimpl = *other.m_pimpl;
    return *this;
}

so::Stopwatch::Stopwatch(so::Stopwatch&& other) = default;

////////////////////////////////////////////////////////////////////////////////

so::Stopwatch& so::Stopwatch::operator=(Stopwatch&& other) = default;

////////////////////////////////////////////////////////////////////////////////

void so::Stopwatch::Start()
{
  m_pimpl->Start();
}

////////////////////////////////////////////////////////////////////////////////

double so::Stopwatch::Stop()
{
  return m_pimpl->Stop();
}

////////////////////////////////////////////////////////////////////////////////

double so::Stopwatch::Split()
{
  return m_pimpl->Split();
}

////////////////////////////////////////////////////////////////////////////////

void so::Stopwatch::Reset()
{
  m_pimpl->Reset();
}

////////////////////////////////////////////////////////////////////////////////

double so::Stopwatch::Get_time()
{
  return m_pimpl->Get_time();
}

////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
